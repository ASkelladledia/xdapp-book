{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name_",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol_",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "coreBridgeAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenBridgeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "str",
          "type": "string"
        }
      ],
      "name": "Log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes",
          "name": "payload",
          "type": "bytes"
        }
      ],
      "name": "PayloadLog",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint16",
          "name": "chainId",
          "type": "uint16"
        },
        {
          "internalType": "bytes32",
          "name": "applicationAddr",
          "type": "bytes32"
        }
      ],
      "name": "registerApplicationContracts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "encodedVm",
          "type": "bytes"
        }
      ],
      "name": "submitForeignPurchase",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "234:2059:9:-:0;;;444:16;;;-1:-1:-1;;;;444:16:9;;;547:353;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2042:13:0;;703:5:9;;710:7;;2042:13:0;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2065:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;734:22:9::1;::::0;-1:-1:-1;;;2158:30:10;;2213:2;2204:12;;-1:-1:-1;734:22:9::1;::::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;766:5;:18:::0;;-1:-1:-1;;;;;;766:18:9;;::::1;774:10;766:18;::::0;;;794:11:::1;:42:::0;;-1:-1:-1;;;;;794:42:9;;::::1;::::0;;::::1;;::::0;;846:12:::1;:47:::0;;;;;::::1;::::0;::::1;;::::0;;-1:-1:-1;234:2059:9;;-1:-1:-1;234:2059:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;234:2059:9;;;-1:-1:-1;234:2059:9;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:10;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:10;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:10;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:10:o;1036:177::-;1115:13;;-1:-1:-1;;;;;1157:31:10;;1147:42;;1137:70;;1203:1;1200;1193:12;1137:70;1036:177;;;:::o;1218:733::-;1335:6;1343;1351;1359;1412:3;1400:9;1391:7;1387:23;1383:33;1380:53;;;1429:1;1426;1419:12;1380:53;1456:16;;-1:-1:-1;;;;;1521:14:10;;;1518:34;;;1548:1;1545;1538:12;1518:34;1571:61;1624:7;1615:6;1604:9;1600:22;1571:61;:::i;:::-;1561:71;;1678:2;1667:9;1663:18;1657:25;1641:41;;1707:2;1697:8;1694:16;1691:36;;;1723:1;1720;1713:12;1691:36;;1746:63;1801:7;1790:8;1779:9;1775:24;1746:63;:::i;:::-;1736:73;;;1828:49;1873:2;1862:9;1858:18;1828:49;:::i;:::-;1818:59;;1896:49;1941:2;1930:9;1926:18;1896:49;:::i;:::-;1886:59;;1218:733;;;;;;;:::o;2227:380::-;2306:1;2302:12;;;;2349;;;2370:61;;2424:4;2416:6;2412:17;2402:27;;2370:61;2477:2;2469:6;2466:14;2446:18;2443:38;2440:161;;2523:10;2518:3;2514:20;2511:1;2504:31;2558:4;2555:1;2548:15;2586:4;2583:1;2576:15;2440:161;;2227:380;;;:::o;:::-;234:2059:9;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "234:2059:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;:::i;:::-;;:::i;:::-;;;1367:14:10;;1360:22;1342:41;;1330:2;1315:18;4431:197:0;1202:187:10;3242:106:0;3329:12;;3242:106;;;1540:25:10;;;1528:2;1513:18;3242:106:0;1394:177:10;5190:286:0;;;;;;:::i;:::-;;:::i;3091:91::-;;;3173:2;2051:36:10;;2039:2;2024:18;3091:91:0;1909:184:10;5871:234:0;;;;;;:::i;:::-;;:::i;1437:851:9:-;;;;;;:::i;:::-;;:::i;:::-;;;3811:18:10;3799:31;;;3781:50;;3769:2;3754:18;1437:851:9;3637:200:10;1039:228:9;;;;;;:::i;:::-;;:::i;:::-;;3406:125:0;;;;;;:::i;:::-;-1:-1:-1;;;;;3506:18:0;3480:7;3506:18;;;;;;;;;;;;3406:125;2365:102;;;:::i;6592:427::-;;;;;;:::i;:::-;;:::i;3727:189::-;;;;;;:::i;:::-;;:::i;3974:149::-;;;;;;:::i;:::-;;:::i;2154:98::-;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;719:10:3;4568:32:0;719:10:3;4584:7:0;4593:6;4568:8;:32::i;:::-;-1:-1:-1;4617:4:0;;4431:197;-1:-1:-1;;;4431:197:0:o;5190:286::-;5317:4;719:10:3;5373:38:0;5389:4;719:10:3;5404:6:0;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;-1:-1:-1;5465:4:0;;5190:286;-1:-1:-1;;;;5190:286:0:o;5871:234::-;5959:4;719:10:3;6013:64:0;719:10:3;6029:7:0;6066:10;6038:25;719:10:3;6029:7:0;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;1437:851:9:-;1598:11;;-1:-1:-1;;;5590:19:10;;1508:6:9;;5634:1:10;5625:11;1598::9;;;;;;;;;;;;;;1677:12;;:51;;-1:-1:-1;;;1677:51:9;;1619:44;;-1:-1:-1;;;;;1677:12:9;;:40;;:51;;1718:9;;1677:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1677:51:9;;;;;;;;;;;;:::i;:::-;1666:100;;;;;;;;;;;;:::i;:::-;1619:147;;1792:3;:11;;;1781:23;;;;;;:::i;:::-;;;;;;;;;;;;;;;1957:17;1977:3;:10;;;1990:3;1977:16;;;;:::i;:::-;1957:36;;2003:31;2017:4;2024:9;2003:5;:31::i;:::-;2135:12;;2189:14;;;;2213:11;;;;2117:15;;-1:-1:-1;;;;;2135:12:9;;:27;;2171:4;;2178:9;;2205:20;;;:::i;:::-;2230:5;;2135:101;;-1:-1:-1;;;;;;2135:101:9;;;;;;;-1:-1:-1;;;;;9079:32:10;;;2135:101:9;;;9061:51:10;9128:18;;;9121:34;;;;9203:6;9191:19;;;9171:18;;;9164:47;9227:18;;;9220:34;2227:1:9;9270:19:10;;;9263:35;2230:5:9;-1:-1:-1;;;2230:5:9;;;;9314:19:10;;;9307:52;9033:19;;2135:101:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2117:119;;2255:1;2246:5;;:10;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;2273:8;2266:15;;;;;1437:851;;;:::o;1039:228::-;1157:5;;-1:-1:-1;;;;;1157:5:9;1143:10;:19;1135:67;;;;-1:-1:-1;;;1135:67:9;;10098:2:10;1135:67:9;;;10080:21:10;10137:2;10117:18;;;10110:30;10176:34;10156:18;;;10149:62;-1:-1:-1;;;10227:18:10;;;10220:33;10270:19;;1135:67:9;;;;;;;;;1212:30;;;;;;;;:21;:30;;;;;:48;1039:228::o;2365:102:0:-;2421:13;2453:7;2446:14;;;;;:::i;6592:427::-;6685:4;719:10:3;6685:4:0;6766:25;719:10:3;6783:7:0;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;-1:-1:-1;;;6801:85:0;;10502:2:10;6801:85:0;;;10484:21:10;10541:2;10521:18;;;10514:30;10580:34;10560:18;;;10553:62;-1:-1:-1;;;10631:18:10;;;10624:35;10676:19;;6801:85:0;10300:401:10;6801:85:0;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;3727:189::-;3806:4;719:10:3;3860:28:0;719:10:3;3877:2:0;3881:6;3860:9;:28::i;3974:149::-;-1:-1:-1;;;;;4089:18:0;;;4063:7;4089:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3974:149::o;10504:370::-;-1:-1:-1;;;;;10635:19:0;;10627:68;;;;-1:-1:-1;;;10627:68:0;;10908:2:10;10627:68:0;;;10890:21:10;10947:2;10927:18;;;10920:30;10986:34;10966:18;;;10959:62;-1:-1:-1;;;11037:18:10;;;11030:34;11081:19;;10627:68:0;10706:400:10;10627:68:0;-1:-1:-1;;;;;10713:21:0;;10705:68;;;;-1:-1:-1;;;10705:68:0;;11313:2:10;10705:68:0;;;11295:21:10;11352:2;11332:18;;;11325:30;11391:34;11371:18;;;11364:62;-1:-1:-1;;;11442:18:10;;;11435:32;11484:19;;10705:68:0;11111:398:10;10705:68:0;-1:-1:-1;;;;;10784:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10835:32;;1540:25:10;;;10835:32:0;;1513:18:10;10835:32:0;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;-1:-1:-1;;11351:16:0;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;-1:-1:-1;;;11404:68:0;;11716:2:10;11404:68:0;;;11698:21:10;11755:2;11735:18;;;11728:30;11794:31;11774:18;;;11767:59;11843:18;;11404:68:0;11514:353:10;11404:68:0;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11275:321;11155:441;;;:::o;7473:818::-;-1:-1:-1;;;;;7599:18:0;;7591:68;;;;-1:-1:-1;;;7591:68:0;;12074:2:10;7591:68:0;;;12056:21:10;12113:2;12093:18;;;12086:30;12152:34;12132:18;;;12125:62;-1:-1:-1;;;12203:18:10;;;12196:35;12248:19;;7591:68:0;11872:401:10;7591:68:0;-1:-1:-1;;;;;7677:16:0;;7669:64;;;;-1:-1:-1;;;7669:64:0;;12480:2:10;7669:64:0;;;12462:21:10;12519:2;12499:18;;;12492:30;12558:34;12538:18;;;12531:62;-1:-1:-1;;;12609:18:10;;;12602:33;12652:19;;7669:64:0;12278:399:10;7669:64:0;-1:-1:-1;;;;;7815:15:0;;7793:19;7815:15;;;;;;;;;;;7848:21;;;;7840:72;;;;-1:-1:-1;;;7840:72:0;;12884:2:10;7840:72:0;;;12866:21:10;12923:2;12903:18;;;12896:30;12962:34;12942:18;;;12935:62;-1:-1:-1;;;13013:18:10;;;13006:36;13059:19;;7840:72:0;12682:402:10;7840:72:0;-1:-1:-1;;;;;7946:15:0;;;:9;:15;;;;;;;;;;;7964:20;;;7946:38;;8161:13;;;;;;;;;;:23;;;;;;8210:26;;1540:25:10;;;8161:13:0;;8210:26;;1513:18:10;8210:26:0;;;;;;;8247:37;12180:121;8567:535;-1:-1:-1;;;;;8650:21:0;;8642:65;;;;-1:-1:-1;;;8642:65:0;;13291:2:10;8642:65:0;;;13273:21:10;13330:2;13310:18;;;13303:30;13369:33;13349:18;;;13342:61;13420:18;;8642:65:0;13089:355:10;8642:65:0;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8946:18:0;;:9;:18;;;;;;;;;;;:28;;;;;;8999:37;1540:25:10;;;8999:37:0;;1513:18:10;8999:37:0;;;;;;;8567:535;;:::o;14:258:10:-;86:1;96:113;110:6;107:1;104:13;96:113;;;186:11;;;180:18;167:11;;;160:39;132:2;125:10;96:113;;;227:6;224:1;221:13;218:48;;;-1:-1:-1;;262:1:10;244:16;;237:27;14:258::o;277:::-;319:3;357:5;351:12;384:6;379:3;372:19;400:63;456:6;449:4;444:3;440:14;433:4;426:5;422:16;400:63;:::i;:::-;517:2;496:15;-1:-1:-1;;492:29:10;483:39;;;;524:4;479:50;;277:258;-1:-1:-1;;277:258:10:o;540:220::-;689:2;678:9;671:21;652:4;709:45;750:2;739:9;735:18;727:6;709:45;:::i;:::-;701:53;540:220;-1:-1:-1;;;540:220:10:o;765:173::-;833:20;;-1:-1:-1;;;;;882:31:10;;872:42;;862:70;;928:1;925;918:12;862:70;765:173;;;:::o;943:254::-;1011:6;1019;1072:2;1060:9;1051:7;1047:23;1043:32;1040:52;;;1088:1;1085;1078:12;1040:52;1111:29;1130:9;1111:29;:::i;:::-;1101:39;1187:2;1172:18;;;;1159:32;;-1:-1:-1;;;943:254:10:o;1576:328::-;1653:6;1661;1669;1722:2;1710:9;1701:7;1697:23;1693:32;1690:52;;;1738:1;1735;1728:12;1690:52;1761:29;1780:9;1761:29;:::i;:::-;1751:39;;1809:38;1843:2;1832:9;1828:18;1809:38;:::i;:::-;1799:48;;1894:2;1883:9;1879:18;1866:32;1856:42;;1576:328;;;;;:::o;2098:127::-;2159:10;2154:3;2150:20;2147:1;2140:31;2190:4;2187:1;2180:15;2214:4;2211:1;2204:15;2230:255;2302:2;2296:9;2344:6;2332:19;;2381:18;2366:34;;2402:22;;;2363:62;2360:88;;;2428:18;;:::i;:::-;2464:2;2457:22;2230:255;:::o;2490:275::-;2561:2;2555:9;2626:2;2607:13;;-1:-1:-1;;2603:27:10;2591:40;;2661:18;2646:34;;2682:22;;;2643:62;2640:88;;;2708:18;;:::i;:::-;2744:2;2737:22;2490:275;;-1:-1:-1;2490:275:10:o;2770:186::-;2818:4;2851:18;2843:6;2840:30;2837:56;;;2873:18;;:::i;:::-;-1:-1:-1;2939:2:10;2918:15;-1:-1:-1;;2914:29:10;2945:4;2910:40;;2770:186::o;2961:671::-;3029:6;3082:2;3070:9;3061:7;3057:23;3053:32;3050:52;;;3098:1;3095;3088:12;3050:52;3138:9;3125:23;3171:18;3163:6;3160:30;3157:50;;;3203:1;3200;3193:12;3157:50;3226:22;;3279:4;3271:13;;3267:27;-1:-1:-1;3257:55:10;;3308:1;3305;3298:12;3257:55;3344:2;3331:16;3369:48;3385:31;3413:2;3385:31;:::i;:::-;3369:48;:::i;:::-;3440:2;3433:5;3426:17;3480:7;3475:2;3470;3466;3462:11;3458:20;3455:33;3452:53;;;3501:1;3498;3491:12;3452:53;3556:2;3551;3547;3543:11;3538:2;3531:5;3527:14;3514:45;3600:1;3579:14;;;3595:2;3575:23;3568:34;;;;3583:5;2961:671;-1:-1:-1;;;;2961:671:10:o;3842:117::-;3927:6;3920:5;3916:18;3909:5;3906:29;3896:57;;3949:1;3946;3939:12;3896:57;3842:117;:::o;3964:313::-;4031:6;4039;4092:2;4080:9;4071:7;4067:23;4063:32;4060:52;;;4108:1;4105;4098:12;4060:52;4147:9;4134:23;4166:30;4190:5;4166:30;:::i;4282:186::-;4341:6;4394:2;4382:9;4373:7;4369:23;4365:32;4362:52;;;4410:1;4407;4400:12;4362:52;4433:29;4452:9;4433:29;:::i;4473:260::-;4541:6;4549;4602:2;4590:9;4581:7;4577:23;4573:32;4570:52;;;4618:1;4615;4608:12;4570:52;4641:29;4660:9;4641:29;:::i;:::-;4631:39;;4689:38;4723:2;4712:9;4708:18;4689:38;:::i;:::-;4679:48;;4473:260;;;;;:::o;4738:380::-;4817:1;4813:12;;;;4860;;;4881:61;;4935:4;4927:6;4923:17;4913:27;;4881:61;4988:2;4980:6;4977:14;4957:18;4954:38;4951:161;;5034:10;5029:3;5025:20;5022:1;5015:31;5069:4;5066:1;5059:15;5097:4;5094:1;5087:15;4951:161;;4738:380;;;:::o;5123:127::-;5184:10;5179:3;5175:20;5172:1;5165:31;5215:4;5212:1;5205:15;5239:4;5236:1;5229:15;5255:128;5295:3;5326:1;5322:6;5319:1;5316:13;5313:39;;;5332:18;;:::i;:::-;-1:-1:-1;5368:9:10;;5255:128::o;5870:428::-;5923:5;5976:3;5969:4;5961:6;5957:17;5953:27;5943:55;;5994:1;5991;5984:12;5943:55;6023:6;6017:13;6054:48;6070:31;6098:2;6070:31;:::i;6054:48::-;6127:2;6118:7;6111:19;6173:3;6166:4;6161:2;6153:6;6149:15;6145:26;6142:35;6139:55;;;6190:1;6187;6180:12;6139:55;6203:64;6264:2;6257:4;6248:7;6244:18;6237:4;6229:6;6225:17;6203:64;:::i;:::-;6285:7;5870:428;-1:-1:-1;;;;5870:428:10:o;6303:335::-;6382:6;6435:2;6423:9;6414:7;6410:23;6406:32;6403:52;;;6451:1;6448;6441:12;6403:52;6484:9;6478:16;6517:18;6509:6;6506:30;6503:50;;;6549:1;6546;6539:12;6503:50;6572:60;6624:7;6615:6;6604:9;6600:22;6572:60;:::i;6643:160::-;6720:13;;6773:4;6762:16;;6752:27;;6742:55;;6793:1;6790;6783:12;6808:136;6886:13;;6908:30;6886:13;6908:30;:::i;6949:1062::-;7055:6;7108:2;7096:9;7087:7;7083:23;7079:32;7076:52;;;7124:1;7121;7114:12;7076:52;7157:9;7151:16;7186:18;7227:2;7219:6;7216:14;7213:34;;;7243:1;7240;7233:12;7213:34;7266:22;;;;7322:6;7304:16;;;7300:29;7297:49;;;7342:1;7339;7332:12;7297:49;7368:22;;:::i;:::-;7413:31;7441:2;7413:31;:::i;:::-;7406:5;7399:46;7491:2;7487;7483:11;7477:18;7472:2;7465:5;7461:14;7454:42;7542:2;7538;7534:11;7528:18;7523:2;7516:5;7512:14;7505:42;7579:41;7616:2;7612;7608:11;7579:41;:::i;:::-;7574:2;7567:5;7563:14;7556:65;7668:3;7664:2;7660:12;7654:19;7648:3;7641:5;7637:15;7630:44;7707:42;7744:3;7740:2;7736:12;7707:42;:::i;:::-;7701:3;7694:5;7690:15;7683:67;7797:3;7793:2;7789:12;7783:19;7777:3;7770:5;7766:15;7759:44;7842:3;7838:2;7834:12;7828:19;7872:2;7862:8;7859:16;7856:36;;;7888:1;7885;7878:12;7856:36;7925:55;7972:7;7961:8;7957:2;7953:17;7925:55;:::i;:::-;7919:3;7908:15;;7901:80;-1:-1:-1;7912:5:10;6949:1062;-1:-1:-1;;;;;6949:1062:10:o;8016:274::-;8145:3;8183:6;8177:13;8199:53;8245:6;8240:3;8233:4;8225:6;8221:17;8199:53;:::i;:::-;8268:16;;;;;8016:274;-1:-1:-1;;8016:274:10:o;8295:168::-;8335:7;8401:1;8397;8393:6;8389:14;8386:1;8383:21;8378:1;8371:9;8364:17;8360:45;8357:71;;;8408:18;;:::i;:::-;-1:-1:-1;8448:9:10;;8295:168::o;8468:297::-;8586:12;;8633:4;8622:16;;;8616:23;;8586:12;8651:16;;8648:111;;;-1:-1:-1;;8725:4:10;8721:17;;;;8718:1;8714:25;8710:38;8699:50;;8468:297;-1:-1:-1;8468:297:10:o;9370:288::-;9439:6;9492:2;9480:9;9471:7;9467:23;9463:32;9460:52;;;9508:1;9505;9498:12;9460:52;9540:9;9534:16;9590:18;9583:5;9579:30;9572:5;9569:41;9559:69;;9624:1;9621;9614:12;9663:228;9702:3;9730:10;9767:2;9764:1;9760:10;9797:2;9794:1;9790:10;9828:3;9824:2;9820:12;9815:3;9812:21;9809:47;;;9836:18;;:::i;:::-;9872:13;;9663:228;-1:-1:-1;;;;9663:228:10:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "name()": "06fdde03",
    "registerApplicationContracts(uint16,bytes32)": "5f327e1c",
    "submitForeignPurchase(bytes)": "59837cdd",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "ast": {
    "absolutePath": "src/Xmint.sol",
    "id": 1326,
    "exportedSymbols": {
      "BridgeGetters": [
        785
      ],
      "BridgeStructs": [
        864
      ],
      "Context": [
        711
      ],
      "ERC20": [
        586
      ],
      "IERC20": [
        664
      ],
      "IERC20Metadata": [
        689
      ],
      "ITokenBridge": [
        977
      ],
      "IWormhole": [
        1104
      ],
      "Structs": [
        1154
      ],
      "Xmint": [
        1325
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2254:9",
    "nodes": [
      {
        "id": 1156,
        "nodeType": "PragmaDirective",
        "src": "39:24:9",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 1157,
        "nodeType": "ImportDirective",
        "src": "65:55:9",
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1326,
        "sourceUnit": 587,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1158,
        "nodeType": "ImportDirective",
        "src": "121:34:9",
        "absolutePath": "src/Wormhole/IWormhole.sol",
        "file": "./Wormhole/IWormhole.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1326,
        "sourceUnit": 1105,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1159,
        "nodeType": "ImportDirective",
        "src": "156:37:9",
        "absolutePath": "src/Wormhole/ITokenBridge.sol",
        "file": "./Wormhole/ITokenBridge.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1326,
        "sourceUnit": 978,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1160,
        "nodeType": "ImportDirective",
        "src": "194:38:9",
        "absolutePath": "src/Wormhole/BridgeStructs.sol",
        "file": "./Wormhole/BridgeStructs.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1326,
        "sourceUnit": 865,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1325,
        "nodeType": "ContractDefinition",
        "src": "234:2059:9",
        "nodes": [
          {
            "id": 1166,
            "nodeType": "VariableDeclaration",
            "src": "264:48:9",
            "constant": false,
            "mutability": "mutable",
            "name": "_applicationContracts",
            "nameLocation": "291:21:9",
            "scope": 1325,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint16_$_t_bytes32_$",
              "typeString": "mapping(uint16 => bytes32)"
            },
            "typeName": {
              "id": 1165,
              "keyType": {
                "id": 1163,
                "name": "uint16",
                "nodeType": "ElementaryTypeName",
                "src": "272:6:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                }
              },
              "nodeType": "Mapping",
              "src": "264:26:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint16_$_t_bytes32_$",
                "typeString": "mapping(uint16 => bytes32)"
              },
              "valueType": {
                "id": 1164,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "282:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1170,
            "nodeType": "VariableDeclaration",
            "src": "318:43:9",
            "constant": false,
            "mutability": "mutable",
            "name": "_completedMessages",
            "nameLocation": "343:18:9",
            "scope": 1325,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 1169,
              "keyType": {
                "id": 1167,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "326:7:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "318:24:9",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 1168,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "337:4:9",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1172,
            "nodeType": "VariableDeclaration",
            "src": "367:13:9",
            "constant": false,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "375:5:9",
            "scope": 1325,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1171,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "367:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1175,
            "nodeType": "VariableDeclaration",
            "src": "386:21:9",
            "constant": false,
            "mutability": "mutable",
            "name": "core_bridge",
            "nameLocation": "396:11:9",
            "scope": 1325,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IWormhole_$1104",
              "typeString": "contract IWormhole"
            },
            "typeName": {
              "id": 1174,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1173,
                "name": "IWormhole",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1104,
                "src": "386:9:9"
              },
              "referencedDeclaration": 1104,
              "src": "386:9:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IWormhole_$1104",
                "typeString": "contract IWormhole"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1178,
            "nodeType": "VariableDeclaration",
            "src": "413:25:9",
            "constant": false,
            "mutability": "mutable",
            "name": "token_bridge",
            "nameLocation": "426:12:9",
            "scope": 1325,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ITokenBridge_$977",
              "typeString": "contract ITokenBridge"
            },
            "typeName": {
              "id": 1177,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1176,
                "name": "ITokenBridge",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 977,
                "src": "413:12:9"
              },
              "referencedDeclaration": 977,
              "src": "413:12:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ITokenBridge_$977",
                "typeString": "contract ITokenBridge"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 1181,
            "nodeType": "VariableDeclaration",
            "src": "444:16:9",
            "constant": false,
            "mutability": "mutable",
            "name": "nonce",
            "nameLocation": "451:5:9",
            "scope": 1325,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 1179,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "444:6:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 1180,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "459:1:9",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "id": 1185,
            "nodeType": "EventDefinition",
            "src": "466:40:9",
            "anonymous": false,
            "eventSelector": "9fd6984187c286e054aa88600c4fe945befd9e9392be55ff9d231e484f1e5b91",
            "name": "PayloadLog",
            "nameLocation": "472:10:9",
            "parameters": {
              "id": 1184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1183,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "payload",
                  "nameLocation": "497:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1185,
                  "src": "483:21:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1182,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "483:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "482:23:9"
            }
          },
          {
            "id": 1189,
            "nodeType": "EventDefinition",
            "src": "511:30:9",
            "anonymous": false,
            "eventSelector": "cf34ef537ac33ee1ac626ca1587a0a7e8e51561e5514f8cb36afa1c5102b3bab",
            "name": "Log",
            "nameLocation": "517:3:9",
            "parameters": {
              "id": 1188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1187,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "str",
                  "nameLocation": "536:3:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1189,
                  "src": "521:18:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1186,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "521:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "520:20:9"
            }
          },
          {
            "id": 1226,
            "nodeType": "FunctionDefinition",
            "src": "547:353:9",
            "body": {
              "id": 1225,
              "nodeType": "Block",
              "src": "719:181:9",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "436f6e7374727563746f72204c6f67",
                        "id": 1205,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "738:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4dd7036f0a67634d46f793c5fe0adfc630cd076e2d87ef10318c37112dad8c41",
                          "typeString": "literal_string \"Constructor Log\""
                        },
                        "value": "Constructor Log"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_4dd7036f0a67634d46f793c5fe0adfc630cd076e2d87ef10318c37112dad8c41",
                          "typeString": "literal_string \"Constructor Log\""
                        }
                      ],
                      "id": 1204,
                      "name": "Log",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1189,
                      "src": "734:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 1206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "734:22:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1207,
                  "nodeType": "EmitStatement",
                  "src": "729:27:9"
                },
                {
                  "expression": {
                    "id": 1211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1208,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1172,
                      "src": "766:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1209,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "774:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "774:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "766:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1212,
                  "nodeType": "ExpressionStatement",
                  "src": "766:18:9"
                },
                {
                  "expression": {
                    "id": 1217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1213,
                      "name": "core_bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1175,
                      "src": "794:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWormhole_$1104",
                        "typeString": "contract IWormhole"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1215,
                          "name": "coreBridgeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1195,
                          "src": "818:17:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1214,
                        "name": "IWormhole",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1104,
                        "src": "808:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IWormhole_$1104_$",
                          "typeString": "type(contract IWormhole)"
                        }
                      },
                      "id": 1216,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "808:28:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IWormhole_$1104",
                        "typeString": "contract IWormhole"
                      }
                    },
                    "src": "794:42:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IWormhole_$1104",
                      "typeString": "contract IWormhole"
                    }
                  },
                  "id": 1218,
                  "nodeType": "ExpressionStatement",
                  "src": "794:42:9"
                },
                {
                  "expression": {
                    "id": 1223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1219,
                      "name": "token_bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1178,
                      "src": "846:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITokenBridge_$977",
                        "typeString": "contract ITokenBridge"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1221,
                          "name": "tokenBridgeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1197,
                          "src": "874:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1220,
                        "name": "ITokenBridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 977,
                        "src": "861:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ITokenBridge_$977_$",
                          "typeString": "type(contract ITokenBridge)"
                        }
                      },
                      "id": 1222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "861:32:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ITokenBridge_$977",
                        "typeString": "contract ITokenBridge"
                      }
                    },
                    "src": "846:47:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ITokenBridge_$977",
                      "typeString": "contract ITokenBridge"
                    }
                  },
                  "id": 1224,
                  "nodeType": "ExpressionStatement",
                  "src": "846:47:9"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1200,
                    "name": "name_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1191,
                    "src": "703:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 1201,
                    "name": "symbol_",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1193,
                    "src": "710:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1202,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1199,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 586,
                  "src": "697:5:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "697:21:9"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1198,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1191,
                  "mutability": "mutable",
                  "name": "name_",
                  "nameLocation": "582:5:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1226,
                  "src": "568:19:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1190,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "568:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1193,
                  "mutability": "mutable",
                  "name": "symbol_",
                  "nameLocation": "611:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1226,
                  "src": "597:21:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1192,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "597:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1195,
                  "mutability": "mutable",
                  "name": "coreBridgeAddress",
                  "nameLocation": "637:17:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1226,
                  "src": "629:25:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1194,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "629:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1197,
                  "mutability": "mutable",
                  "name": "tokenBridgeAddress",
                  "nameLocation": "672:18:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1226,
                  "src": "664:26:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "664:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "558:138:9"
            },
            "returnParameters": {
              "id": 1203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "719:0:9"
            },
            "scope": 1325,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1249,
            "nodeType": "FunctionDefinition",
            "src": "1039:228:9",
            "body": {
              "id": 1248,
              "nodeType": "Block",
              "src": "1125:142:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1235,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1143:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1143:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1237,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1172,
                          "src": "1157:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1143:19:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f776e65722063616e207265676973746572206e657720636861696e7321",
                        "id": 1239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1164:37:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_698f093739048e0d0d04d257a772e914828254033190db3d927fdda8176c85a9",
                          "typeString": "literal_string \"Only owner can register new chains!\""
                        },
                        "value": "Only owner can register new chains!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_698f093739048e0d0d04d257a772e914828254033190db3d927fdda8176c85a9",
                          "typeString": "literal_string \"Only owner can register new chains!\""
                        }
                      ],
                      "id": 1234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1135:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1135:67:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1241,
                  "nodeType": "ExpressionStatement",
                  "src": "1135:67:9"
                },
                {
                  "expression": {
                    "id": 1246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1242,
                        "name": "_applicationContracts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1166,
                        "src": "1212:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint16_$_t_bytes32_$",
                          "typeString": "mapping(uint16 => bytes32)"
                        }
                      },
                      "id": 1244,
                      "indexExpression": {
                        "id": 1243,
                        "name": "chainId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1229,
                        "src": "1234:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1212:30:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1245,
                      "name": "applicationAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1231,
                      "src": "1245:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1212:48:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 1247,
                  "nodeType": "ExpressionStatement",
                  "src": "1212:48:9"
                }
              ]
            },
            "documentation": {
              "id": 1227,
              "nodeType": "StructuredDocumentation",
              "src": "906:128:9",
              "text": "Registers it's sibling applications on other chains as the only ones that can send this instance messages    "
            },
            "functionSelector": "5f327e1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "registerApplicationContracts",
            "nameLocation": "1048:28:9",
            "parameters": {
              "id": 1232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1229,
                  "mutability": "mutable",
                  "name": "chainId",
                  "nameLocation": "1084:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1249,
                  "src": "1077:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 1228,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "1077:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1231,
                  "mutability": "mutable",
                  "name": "applicationAddr",
                  "nameLocation": "1101:15:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1249,
                  "src": "1093:23:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1230,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1076:41:9"
            },
            "returnParameters": {
              "id": 1233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1125:0:9"
            },
            "scope": 1325,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1324,
            "nodeType": "FunctionDefinition",
            "src": "1437:851:9",
            "body": {
              "id": 1323,
              "nodeType": "Block",
              "src": "1516:772:9",
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "hexValue": "74657374",
                        "id": 1258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1602:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                          "typeString": "literal_string \"test\""
                        },
                        "value": "test"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_9c22ff5f21f0b81b113e63f7db6da94fedef11b2119b4088b89664fb9a3cb658",
                          "typeString": "literal_string \"test\""
                        }
                      ],
                      "id": 1257,
                      "name": "Log",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1189,
                      "src": "1598:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 1259,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1598:11:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1260,
                  "nodeType": "EmitStatement",
                  "src": "1593:16:9"
                },
                {
                  "assignments": [
                    1265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1265,
                      "mutability": "mutable",
                      "name": "vaa",
                      "nameLocation": "1660:3:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1323,
                      "src": "1619:44:9",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TransferWithPayload_$819_memory_ptr",
                        "typeString": "struct BridgeStructs.TransferWithPayload"
                      },
                      "typeName": {
                        "id": 1264,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1263,
                          "name": "BridgeStructs.TransferWithPayload",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 819,
                          "src": "1619:33:9"
                        },
                        "referencedDeclaration": 819,
                        "src": "1619:33:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TransferWithPayload_$819_storage_ptr",
                          "typeString": "struct BridgeStructs.TransferWithPayload"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1276,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1270,
                            "name": "encodedVm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1252,
                            "src": "1718:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 1268,
                            "name": "token_bridge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1178,
                            "src": "1677:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ITokenBridge_$977",
                              "typeString": "contract ITokenBridge"
                            }
                          },
                          "id": 1269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "completeTransferWithPayload",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 959,
                          "src": "1677:40:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes memory) external returns (bytes memory)"
                          }
                        },
                        "id": 1271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1677:51:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "expression": {
                              "id": 1272,
                              "name": "BridgeStructs",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 864,
                              "src": "1731:13:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_BridgeStructs_$864_$",
                                "typeString": "type(contract BridgeStructs)"
                              }
                            },
                            "id": 1273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "TransferWithPayload",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 819,
                            "src": "1731:33:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_TransferWithPayload_$819_storage_ptr_$",
                              "typeString": "type(struct BridgeStructs.TransferWithPayload storage pointer)"
                            }
                          }
                        ],
                        "id": 1274,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1730:35:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_TransferWithPayload_$819_storage_ptr_$",
                          "typeString": "type(struct BridgeStructs.TransferWithPayload storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_TransferWithPayload_$819_storage_ptr_$",
                          "typeString": "type(struct BridgeStructs.TransferWithPayload storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 1266,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1666:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 1267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1666:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 1275,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1666:100:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_TransferWithPayload_$819_memory_ptr",
                      "typeString": "struct BridgeStructs.TransferWithPayload memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1619:147:9"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1278,
                          "name": "vaa",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1265,
                          "src": "1792:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TransferWithPayload_$819_memory_ptr",
                            "typeString": "struct BridgeStructs.TransferWithPayload memory"
                          }
                        },
                        "id": 1279,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "payload",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 818,
                        "src": "1792:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1277,
                      "name": "PayloadLog",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1185,
                      "src": "1781:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory)"
                      }
                    },
                    "id": 1280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1781:23:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1281,
                  "nodeType": "EmitStatement",
                  "src": "1776:28:9"
                },
                {
                  "assignments": [
                    1283
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1283,
                      "mutability": "mutable",
                      "name": "amtToMint",
                      "nameLocation": "1965:9:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1323,
                      "src": "1957:17:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1282,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1957:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1288,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1284,
                        "name": "vaa",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1265,
                        "src": "1977:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TransferWithPayload_$819_memory_ptr",
                          "typeString": "struct BridgeStructs.TransferWithPayload memory"
                        }
                      },
                      "id": 1285,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 806,
                      "src": "1977:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "hexValue": "313030",
                      "id": 1286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1990:3:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_100_by_1",
                        "typeString": "int_const 100"
                      },
                      "value": "100"
                    },
                    "src": "1977:16:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1957:36:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1292,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2017:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Xmint_$1325",
                              "typeString": "contract Xmint"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Xmint_$1325",
                              "typeString": "contract Xmint"
                            }
                          ],
                          "id": 1291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2009:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1290,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2009:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2009:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1294,
                        "name": "amtToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1283,
                        "src": "2024:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1289,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 403,
                      "src": "2003:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2003:31:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1296,
                  "nodeType": "ExpressionStatement",
                  "src": "2003:31:9"
                },
                {
                  "assignments": [
                    1298
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1298,
                      "mutability": "mutable",
                      "name": "sequence",
                      "nameLocation": "2124:8:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 1323,
                      "src": "2117:15:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 1297,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "2117:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1316,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1303,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2171:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Xmint_$1325",
                              "typeString": "contract Xmint"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Xmint_$1325",
                              "typeString": "contract Xmint"
                            }
                          ],
                          "id": 1302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2163:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1301,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2163:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2163:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1305,
                        "name": "amtToMint",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1283,
                        "src": "2178:9:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 1306,
                          "name": "vaa",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1265,
                          "src": "2189:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TransferWithPayload_$819_memory_ptr",
                            "typeString": "struct BridgeStructs.TransferWithPayload memory"
                          }
                        },
                        "id": 1307,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "tokenChain",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 810,
                        "src": "2189:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1310,
                              "name": "vaa",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1265,
                              "src": "2213:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_TransferWithPayload_$819_memory_ptr",
                                "typeString": "struct BridgeStructs.TransferWithPayload memory"
                              }
                            },
                            "id": 1311,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "payload",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 818,
                            "src": "2213:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2205:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes32_$",
                            "typeString": "type(bytes32)"
                          },
                          "typeName": {
                            "id": 1308,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "2205:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2205:20:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 1313,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2227:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 1314,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1181,
                        "src": "2230:5:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 1299,
                        "name": "token_bridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1178,
                        "src": "2135:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITokenBridge_$977",
                          "typeString": "contract ITokenBridge"
                        }
                      },
                      "id": 1300,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferTokens",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 921,
                      "src": "2135:27:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_uint256_$_t_uint16_$_t_bytes32_$_t_uint256_$_t_uint32_$returns$_t_uint64_$",
                        "typeString": "function (address,uint256,uint16,bytes32,uint256,uint32) payable external returns (uint64)"
                      }
                    },
                    "id": 1315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2135:101:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2117:119:9"
                },
                {
                  "expression": {
                    "id": 1319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1317,
                      "name": "nonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1181,
                      "src": "2246:5:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 1318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2255:1:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2246:10:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 1320,
                  "nodeType": "ExpressionStatement",
                  "src": "2246:10:9"
                },
                {
                  "expression": {
                    "id": 1321,
                    "name": "sequence",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1298,
                    "src": "2273:8:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 1256,
                  "id": 1322,
                  "nodeType": "Return",
                  "src": "2266:15:9"
                }
              ]
            },
            "documentation": {
              "id": 1250,
              "nodeType": "StructuredDocumentation",
              "src": "1273:159:9",
              "text": "Takes inventory of the foreign currency\nMints tokens to self\nTransfers tokens with Payload 1 to Receipient on Foreign chain"
            },
            "functionSelector": "59837cdd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "submitForeignPurchase",
            "nameLocation": "1446:21:9",
            "parameters": {
              "id": 1253,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1252,
                  "mutability": "mutable",
                  "name": "encodedVm",
                  "nameLocation": "1481:9:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "1468:22:9",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1251,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1468:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1467:24:9"
            },
            "returnParameters": {
              "id": 1256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1255,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "1508:6:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 1254,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "1508:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1507:8:9"
            },
            "scope": 1325,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1161,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 586,
              "src": "252:5:9"
            },
            "id": 1162,
            "nodeType": "InheritanceSpecifier",
            "src": "252:5:9"
          }
        ],
        "canonicalName": "Xmint",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1325,
          586,
          689,
          664,
          711
        ],
        "name": "Xmint",
        "nameLocation": "243:5:9",
        "scope": 1326,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 9
}